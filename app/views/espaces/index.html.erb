<div class="container">
  <div class="row search">
    <%= render "shared/search" %>
  </div>
  <div class="row text-center">
    <div class="result-message">
      <% if @address && @nb_results == 0 %>
        <h1 id="city-display"><%= t('.no_results') %></h1>
      <% elsif @address %>
        <h1 id="city-display"><%= t('.results', address: @address) %> </h1>
      <% else %>
      <% end %>
    </div>
  </div>
  <div class="row">
    <div class="col-xs-12 col-lg-7" id="espaces-box">
        <% @espaces.each do |espace| %>
          <div class="col-xs-12 col-md-6 text-center" id="espace-<%= espace.id %>">
            <%= link_to(espace_path(id: espace.id, address: @address)) do %>
              <div id="img-espace-index" style="background-image: url(<%= image_path espace.picture.url(:medium) %>);">
                <h2 class="content-display"><%= espace.name %></h2>
                <p class="content-display"><%= espace.address.truncate(35) %></p>
                <div id="espace-category">
                  <%= espace.category %>
               </div>
                <%= image_tag espace.user.put_picture(:thumb), class: "img-circle", id:"img-user-index" %>
              </div>
            <% end %>
            <div id="title-card">
            </div>
          </div>
        <% end %>
    </div>
    <div class="col-xs-12 col-lg-5 hidden-xs hidden-sm visible-md-* visible-lg-*" id="map-container">
      <div id="map" style="width: 100%; height: 500px;"></div>
    </div>
  </div>
</div>


<% content_for(:after_js) do %>
<script type="text/javascript">
  function initializeAutocomplete(id) {
    var element = document.getElementById(id);
    if (element) {
      var autocomplete = new google.maps.places.Autocomplete(element, { types: ['geocode'] });
      console.log(element)
      google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);
    }
  }
  function onPlaceChanged() {
    var place = this.getPlace();
      console.log(place);  // Uncomment this line to view the full object returned by Google API.
      for (var i in place.address_components) {
        var component = place.address_components[i];
        for (var j in component.types) {  // Some types are ["country", "political"]
          var type_element = document.getElementById(component.types[j]);
        if (type_element) {
          type_element.value = component.long_name;
        }
      }
    }
  }
  google.maps.event.addDomListener(window, 'load', function() {
    console.log('doing something');
    initializeAutocomplete('user_input_autocomplete_address');
  });
  </script>
  <%= javascript_tag do %>
    $(document).on('ready', function() {
      var mapOptions = {
        disableDefaultUI: true
      }
       handler = Gmaps.build('Google');
      handler.buildMap({
        provider: { disableDefaultUI: true },
        internal: { id: 'map' }
        },
        function(){
          markers = handler.addMarkers(<%= raw @markers.to_json %>);
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
        });
    })
  <% end %>
<% end %>